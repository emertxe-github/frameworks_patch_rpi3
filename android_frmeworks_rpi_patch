
project frameworks/base/
diff --git a/opengl/java/android/opengl/GLSurfaceView.java b/opengl/java/android/opengl/GLSurfaceView.java
index 0f5dd3a..ae19662 100644
--- a/opengl/java/android/opengl/GLSurfaceView.java
+++ b/opengl/java/android/opengl/GLSurfaceView.java
@@ -992,7 +992,9 @@ public class GLSurfaceView extends SurfaceView implements SurfaceHolder.Callback
      */
     private class SimpleEGLConfigChooser extends ComponentSizeChooser {
         public SimpleEGLConfigChooser(boolean withDepthBuffer) {
-            super(8, 8, 8, 0, withDepthBuffer ? 16 : 0, 0);
+            //super(8, 8, 8, 0, withDepthBuffer ? 16 : 0, 0);
+	    //rpi patch
+            super(8, 8, 8, 8, withDepthBuffer ? 24 : 0, 0);
         }
     }
 

project frameworks/native/
diff --git a/opengl/libs/EGL/eglApi.cpp b/opengl/libs/EGL/eglApi.cpp
index 436ea30..89c3c6c 100644
--- a/opengl/libs/EGL/eglApi.cpp
+++ b/opengl/libs/EGL/eglApi.cpp
@@ -496,7 +496,9 @@ EGLSurface eglCreateWindowSurface(  EGLDisplay dpy, EGLConfig config,
         cnx->egl.eglGetConfigAttrib(iDpy, config, EGL_ALPHA_SIZE, &a);
         if (a > 0) {
             // alpha-channel requested, there's really only one suitable format
-            format = HAL_PIXEL_FORMAT_RGBA_8888;
+            //format = HAL_PIXEL_FORMAT_RGBA_8888;
+	    //rpi patch
+            format = HAL_PIXEL_FORMAT_BGRA_8888;
         } else {
             EGLint r, g, b;
             r = g = b = 0;
@@ -1860,7 +1862,9 @@ EGLClientBuffer eglCreateNativeClientBufferANDROID(const EGLint *attrib_list)
     // Validate format.
     if (red_size == 8 && green_size == 8 && blue_size == 8) {
         if (alpha_size == 8) {
-            format = HAL_PIXEL_FORMAT_RGBA_8888;
+            //format = HAL_PIXEL_FORMAT_RGBA_8888;
+	    //rpi patch
+            format = HAL_PIXEL_FORMAT_BGRA_8888;
         } else {
             format = HAL_PIXEL_FORMAT_RGB_888;
         }
